---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# make-action
name: '🛠️ Runs make'
description: 'Executes the steps described in a Makefile'

inputs:
  # Optional
  repository:
    # Uses actions/checkout to clone the repository
    description: 'Remote Git repository URL to download'
    required: false
    type: 'string'
  path:
    description: 'Download the repository to this local filesystem path'
    required: false
    type: 'string'
  make_args:
    description: 'Arguments/flags sent to make command'
    required: false
    type: 'string'
  debug:
    description: 'Set true to enable additional diagnostic output'
    required: false
    type: 'boolean'
    default: false

runs:
  using: 'composite'
  steps:
    - name: 'Clone repository'
      if: inputs.repository != ''
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: "${{ inputs.repository }}"
        path: "${{ inputs.path }}"

    - name: 'Setup action/environment'
      shell: bash
      run: |
        # Setup action/environment

        make_cmd=$(which make)
        if [ ! -x "$make_cmd" ]; then
          echo 'Error: make command not found ❌'
          exit 1
        fi

        # Set build parameters/variables
        echo "Action triggered by: ${GITHUB_TRIGGERING_ACTOR}"
        datetime=$(date +'%Y-%m-%d-%H%M')
        echo "Date and time stamp: $datetime"

        if [ -n "${{ inputs.path }}" ] && \
          [ -z "${{ inputs.make_args }}" ]; then
          echo 'Repository downloaded to non-local path ⚠️'
          echo "Suggested make_args: -C ${{ inputs.path }}"
        fi

        # Output build heading
        echo '# 🔨 Make Action' >> "$GITHUB_STEP_SUMMARY"
        echo "Directory: $PWD" >> "$GITHUB_STEP_SUMMARY"
        if [ -n "${{ inputs.repository }}" ]; then
          echo "Repository: ${{ inputs.repository }}" \
            >> "$GITHUB_STEP_SUMMARY"
        fi
        if [ -n "${{ inputs.path }}" ]; then
          echo "Path: ${{ inputs.path }}" >> "$GITHUB_STEP_SUMMARY"
        fi

        debug_lower=$(echo "${{ inputs.debug }}" | tr '[:upper:]' '[:lower:]')
        if [ "f$debug_lower" = 'ftrue' ]; then
          echo '🐞 Running: find . -name Makefile'
          find . -name Makefile
        fi

        # Automatically include -C option when make_args empty and path given
        if [ -z "${{ inputs.make_args }}" ] && \
          [ -n "${{ inputs.path }}" ]; then
          make_args="-C ${{ inputs.path }}"
        else
          make_args="${{ inputs.make_args }}"
        fi

        if "$make_cmd" $make_args; then
          echo "Success: $make_cmd $make_args ✅" >> "$GITHUB_STEP_SUMMARY"
        else
          echo "Failed: $make_cmd $make_args ❌" >> "$GITHUB_STEP_SUMMARY"
          exit 1
        fi
